{
  "openapi": "3.0.1",
  "servers": [
    {
      "url": "http://localhost:4000",
      "description": "Local Server"
    }
  ],
  "info": {
    "title": "BBS Server",
    "description": "API DOC For Bulletin Board System API Server",
    "version": "0.0.2",
    "license": {
      "name": "UNLICENSED"
    }
  },
  "paths": {
    "/articles": {
      "get": {
        "tags": [
          "articles"
        ],
        "parameters": [
          {
            "name": "posted_at",
            "in": "query",
            "schema": {
              "x-typia-jsDocTags": [
                {
                  "name": "default",
                  "text": [
                    {
                      "text": "desc",
                      "kind": "text"
                    }
                  ]
                }
              ],
              "x-typia-required": true,
              "x-typia-optional": true,
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            },
            "required": false
          },
          {
            "name": "skip",
            "in": "query",
            "schema": {
              "x-typia-jsDocTags": [
                {
                  "name": "default",
                  "text": [
                    {
                      "text": "0",
                      "kind": "text"
                    }
                  ]
                }
              ],
              "x-typia-required": true,
              "x-typia-optional": true,
              "type": "integer",
              "x-typia-typeTags": [
                {
                  "target": "number",
                  "name": "Type<\"uint64\">",
                  "kind": "type",
                  "value": "uint64",
                  "validate": "Math.floor($input) === $input && 0 <= $input && $input <= 18446744073709551615",
                  "exclusive": true
                }
              ],
              "default": 0
            },
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "x-typia-jsDocTags": [
                {
                  "name": "default",
                  "text": [
                    {
                      "text": "10",
                      "kind": "text"
                    }
                  ]
                }
              ],
              "x-typia-required": true,
              "x-typia-optional": true,
              "type": "integer",
              "minimum": 10,
              "x-typia-typeTags": [
                {
                  "target": "number",
                  "name": "Type<\"uint64\">",
                  "kind": "type",
                  "value": "uint64",
                  "validate": "Math.floor($input) === $input && 0 <= $input && $input <= 18446744073709551615",
                  "exclusive": true
                },
                {
                  "target": "number",
                  "name": "Minimum<10>",
                  "kind": "minimum",
                  "value": 10,
                  "validate": "10 <= $input",
                  "exclusive": [
                    "minimum",
                    "exclusiveMinimum"
                  ]
                }
              ],
              "default": 10
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "paginated article list",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IArticle.IPaginatedResponse"
                }
              }
            },
            "x-nestia-encrypted": false
          }
        },
        "summary": "get article list",
        "description": "get article list by filtering and sorting options.",
        "x-nestia-namespace": "articles.getList",
        "x-nestia-jsDocTags": [
          {
            "name": "summary",
            "text": [
              {
                "text": "get article list",
                "kind": "text"
              }
            ]
          },
          {
            "name": "tag",
            "text": [
              {
                "text": "articles",
                "kind": "text"
              }
            ]
          },
          {
            "name": "param",
            "text": [
              {
                "text": "query",
                "kind": "parameterName"
              },
              {
                "text": " ",
                "kind": "space"
              },
              {
                "text": "filtering and sorting options",
                "kind": "text"
              }
            ]
          },
          {
            "name": "return",
            "text": [
              {
                "text": "paginated article list",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "GET"
      },
      "post": {
        "tags": [
          "articles"
        ],
        "parameters": [],
        "requestBody": {
          "description": "article content",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IArticle.ICreate"
              }
            }
          },
          "required": true,
          "x-nestia-encrypted": false
        },
        "responses": {
          "201": {
            "description": "created article",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IArticle.Identity"
                }
              }
            },
            "x-nestia-encrypted": false
          },
          "401": {
            "description": "PERMISSION DENIED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "enum": [
                    "REQUIRED_PERMISSION",
                    "EXPIRED_PERMISSION",
                    "INVALID_PERMISSION"
                  ]
                }
              }
            }
          }
        },
        "summary": "create a new article",
        "description": "create a new article, the article have one snapshot.",
        "security": [
          {
            "bearer": []
          }
        ],
        "x-nestia-namespace": "articles.create",
        "x-nestia-jsDocTags": [
          {
            "name": "summary",
            "text": [
              {
                "text": "create a new article",
                "kind": "text"
              }
            ]
          },
          {
            "name": "tag",
            "text": [
              {
                "text": "articles",
                "kind": "text"
              }
            ]
          },
          {
            "name": "security",
            "text": [
              {
                "text": "bearer",
                "kind": "text"
              }
            ]
          },
          {
            "name": "param",
            "text": [
              {
                "text": "body",
                "kind": "parameterName"
              },
              {
                "text": " ",
                "kind": "space"
              },
              {
                "text": "article content",
                "kind": "text"
              }
            ]
          },
          {
            "name": "return",
            "text": [
              {
                "text": "created article",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "POST"
      }
    },
    "/articles/{article_id}": {
      "get": {
        "tags": [
          "articles"
        ],
        "parameters": [
          {
            "name": "article_id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-typia-typeTags": [
                {
                  "target": "string",
                  "name": "Format<\"uuid\">",
                  "kind": "format",
                  "value": "uuid",
                  "validate": "/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i.test($input)",
                  "exclusive": [
                    "format",
                    "pattern"
                  ]
                }
              ]
            },
            "description": "identity of article",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "found article",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IArticle"
                }
              }
            },
            "x-nestia-encrypted": false
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "enum": [
                    "NOT_FOUND_ARTICLE"
                  ]
                }
              }
            }
          }
        },
        "summary": "get a article",
        "description": "get a specific article by article id",
        "x-nestia-namespace": "articles.get",
        "x-nestia-jsDocTags": [
          {
            "name": "summary",
            "text": [
              {
                "text": "get a article",
                "kind": "text"
              }
            ]
          },
          {
            "name": "tag",
            "text": [
              {
                "text": "articles",
                "kind": "text"
              }
            ]
          },
          {
            "name": "param",
            "text": [
              {
                "text": "article_id",
                "kind": "parameterName"
              },
              {
                "text": " ",
                "kind": "space"
              },
              {
                "text": "identity of article",
                "kind": "text"
              }
            ]
          },
          {
            "name": "return",
            "text": [
              {
                "text": "found article",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "GET"
      },
      "put": {
        "tags": [
          "articles"
        ],
        "parameters": [
          {
            "name": "article_id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-typia-typeTags": [
                {
                  "target": "string",
                  "name": "Format<\"uuid\">",
                  "kind": "format",
                  "value": "uuid",
                  "validate": "/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i.test($input)",
                  "exclusive": [
                    "format",
                    "pattern"
                  ]
                }
              ]
            },
            "description": "identity of article",
            "required": true
          }
        ],
        "requestBody": {
          "description": "update content of article",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IArticle.ICreate"
              }
            }
          },
          "required": true,
          "x-nestia-encrypted": false
        },
        "responses": {
          "201": {
            "description": "updated article",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IArticle.Identity"
                }
              }
            },
            "x-nestia-encrypted": false
          },
          "401": {
            "description": "PERMISSION DENIED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "enum": [
                    "REQUIRED_PERMISSION",
                    "EXPIRED_PERMISSION",
                    "INVALID_PERMISSION"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "enum": [
                    "INSUFFICIENT_PERMISSION"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "enum": [
                    "NOT_FOUND_ARTICLE"
                  ]
                }
              }
            }
          }
        },
        "summary": "update a article",
        "description": "update a specific article found by article id\n\nonly the author can update the article",
        "security": [
          {
            "bearer": []
          }
        ],
        "x-nestia-namespace": "articles.update",
        "x-nestia-jsDocTags": [
          {
            "name": "summary",
            "text": [
              {
                "text": "update a article",
                "kind": "text"
              }
            ]
          },
          {
            "name": "tag",
            "text": [
              {
                "text": "articles",
                "kind": "text"
              }
            ]
          },
          {
            "name": "security",
            "text": [
              {
                "text": "bearer",
                "kind": "text"
              }
            ]
          },
          {
            "name": "param",
            "text": [
              {
                "text": "article_id",
                "kind": "parameterName"
              },
              {
                "text": " ",
                "kind": "space"
              },
              {
                "text": "identity of article",
                "kind": "text"
              }
            ]
          },
          {
            "name": "param",
            "text": [
              {
                "text": "body",
                "kind": "parameterName"
              },
              {
                "text": " ",
                "kind": "space"
              },
              {
                "text": "update content of article",
                "kind": "text"
              }
            ]
          },
          {
            "name": "return",
            "text": [
              {
                "text": "updated article",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "PUT"
      },
      "delete": {
        "tags": [
          "articles"
        ],
        "parameters": [
          {
            "name": "article_id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-typia-typeTags": [
                {
                  "target": "string",
                  "name": "Format<\"uuid\">",
                  "kind": "format",
                  "value": "uuid",
                  "validate": "/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i.test($input)",
                  "exclusive": [
                    "format",
                    "pattern"
                  ]
                }
              ]
            },
            "description": "identity of article",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "none",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IArticle.Identity"
                }
              }
            },
            "x-nestia-encrypted": false
          },
          "401": {
            "description": "PERMISSION DENIED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "enum": [
                    "REQUIRED_PERMISSION",
                    "EXPIRED_PERMISSION",
                    "INVALID_PERMISSION"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "enum": [
                    "INSUFFICIENT_PERMISSION"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "enum": [
                    "NOT_FOUND_ARTICLE"
                  ]
                }
              }
            }
          }
        },
        "summary": "delete a article",
        "description": "delete a specific article found by article id\n\nonly the author can delete the article",
        "security": [
          {
            "bearer": []
          }
        ],
        "x-nestia-namespace": "articles.remove",
        "x-nestia-jsDocTags": [
          {
            "name": "summary",
            "text": [
              {
                "text": "delete a article",
                "kind": "text"
              }
            ]
          },
          {
            "name": "tag",
            "text": [
              {
                "text": "articles",
                "kind": "text"
              }
            ]
          },
          {
            "name": "security",
            "text": [
              {
                "text": "bearer",
                "kind": "text"
              }
            ]
          },
          {
            "name": "param",
            "text": [
              {
                "text": "article_id",
                "kind": "parameterName"
              },
              {
                "text": " ",
                "kind": "space"
              },
              {
                "text": "identity of article",
                "kind": "text"
              }
            ]
          },
          {
            "name": "return",
            "text": [
              {
                "text": "none",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "DELETE"
      }
    },
    "/auth/oauth/urls": {
      "get": {
        "tags": [
          "auth"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "oauth 로그인 페이지 주소 객체",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IAuthentication.IOauthUrls"
                }
              }
            },
            "x-nestia-encrypted": false
          }
        },
        "summary": "oauth 로그인 페이지 주소 목록",
        "description": "oauth 로그인 페이지 주소를 key:value 형식으로 응답",
        "x-nestia-namespace": "auth.oauth.urls.getUrls",
        "x-nestia-jsDocTags": [
          {
            "name": "summary",
            "text": [
              {
                "text": "oauth 로그인 페이지 주소 목록",
                "kind": "text"
              }
            ]
          },
          {
            "name": "tag",
            "text": [
              {
                "text": "auth",
                "kind": "text"
              }
            ]
          },
          {
            "name": "return",
            "text": [
              {
                "text": "oauth 로그인 페이지 주소 객체",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "GET"
      }
    },
    "/auth/oauth/authorize": {
      "post": {
        "tags": [
          "auth"
        ],
        "parameters": [],
        "requestBody": {
          "description": "oauth 유형과 code 정보를 전달",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IAuthentication.IOauthInput"
              }
            }
          },
          "required": true,
          "x-nestia-encrypted": false
        },
        "responses": {
          "200": {
            "description": "권한 토큰",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IAuthentication"
                }
              }
            },
            "x-nestia-encrypted": false
          },
          "401": {
            "description": "인증 실패",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "enum": [
                    "AUTHENTICATION_FAIL"
                  ]
                }
              }
            }
          }
        },
        "summary": "oauth 인증",
        "description": "oauth 인증을 통해 사용자 권한이 인가된 토큰을 응답",
        "x-nestia-namespace": "auth.oauth.authorize.authorize",
        "x-nestia-jsDocTags": [
          {
            "name": "summary",
            "text": [
              {
                "text": "oauth 인증",
                "kind": "text"
              }
            ]
          },
          {
            "name": "tag",
            "text": [
              {
                "text": "auth",
                "kind": "text"
              }
            ]
          },
          {
            "name": "param",
            "text": [
              {
                "text": "body",
                "kind": "parameterName"
              },
              {
                "text": " ",
                "kind": "space"
              },
              {
                "text": "oauth 유형과 code 정보를 전달",
                "kind": "text"
              }
            ]
          },
          {
            "name": "return",
            "text": [
              {
                "text": "권한 토큰",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "POST"
      }
    },
    "/comments": {
      "get": {
        "tags": [
          "comments"
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "schema": {
              "x-typia-jsDocTags": [
                {
                  "name": "default",
                  "text": [
                    {
                      "text": "0",
                      "kind": "text"
                    }
                  ]
                }
              ],
              "x-typia-required": true,
              "x-typia-optional": true,
              "type": "integer",
              "x-typia-typeTags": [
                {
                  "target": "number",
                  "name": "Type<\"uint64\">",
                  "kind": "type",
                  "value": "uint64",
                  "validate": "Math.floor($input) === $input && 0 <= $input && $input <= 18446744073709551615",
                  "exclusive": true
                }
              ],
              "default": 0
            },
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "x-typia-jsDocTags": [
                {
                  "name": "default",
                  "text": [
                    {
                      "text": "10",
                      "kind": "text"
                    }
                  ]
                }
              ],
              "x-typia-required": true,
              "x-typia-optional": true,
              "type": "integer",
              "minimum": 10,
              "x-typia-typeTags": [
                {
                  "target": "number",
                  "name": "Type<\"uint64\">",
                  "kind": "type",
                  "value": "uint64",
                  "validate": "Math.floor($input) === $input && 0 <= $input && $input <= 18446744073709551615",
                  "exclusive": true
                },
                {
                  "target": "number",
                  "name": "Minimum<10>",
                  "kind": "minimum",
                  "value": 10,
                  "validate": "10 <= $input",
                  "exclusive": [
                    "minimum",
                    "exclusiveMinimum"
                  ]
                }
              ],
              "default": 10
            },
            "required": false
          },
          {
            "name": "article_id",
            "in": "query",
            "schema": {
              "x-typia-required": true,
              "x-typia-optional": false,
              "type": "string",
              "format": "uuid",
              "x-typia-typeTags": [
                {
                  "target": "string",
                  "name": "Format<\"uuid\">",
                  "kind": "format",
                  "value": "uuid",
                  "validate": "/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i.test($input)",
                  "exclusive": [
                    "format",
                    "pattern"
                  ]
                }
              ]
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "paginated comment list",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IComment.IPaginatedResponse"
                }
              }
            },
            "x-nestia-encrypted": false
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "enum": [
                    "NOT_FOUND_ARTICLE"
                  ]
                }
              }
            }
          }
        },
        "summary": "get comment list",
        "description": "get comment list by filtering and sorting options.",
        "x-nestia-namespace": "comments.getList",
        "x-nestia-jsDocTags": [
          {
            "name": "summary",
            "text": [
              {
                "text": "get comment list",
                "kind": "text"
              }
            ]
          },
          {
            "name": "tag",
            "text": [
              {
                "text": "comments",
                "kind": "text"
              }
            ]
          },
          {
            "name": "param",
            "text": [
              {
                "text": "query",
                "kind": "parameterName"
              },
              {
                "text": " ",
                "kind": "space"
              },
              {
                "text": "filtering and sorting options",
                "kind": "text"
              }
            ]
          },
          {
            "name": "return",
            "text": [
              {
                "text": "paginated comment list",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "GET"
      },
      "post": {
        "tags": [
          "comments"
        ],
        "parameters": [],
        "requestBody": {
          "description": "comment content",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IComment.ICreate"
              }
            }
          },
          "required": true,
          "x-nestia-encrypted": false
        },
        "responses": {
          "201": {
            "description": "created comment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IComment.Identity"
                }
              }
            },
            "x-nestia-encrypted": false
          },
          "401": {
            "description": "PERMISSION DENIED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "enum": [
                    "REQUIRED_PERMISSION",
                    "EXPIRED_PERMISSION",
                    "INVALID_PERMISSION"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "enum": [
                    "NOT_FOUND_ARTICLE"
                  ]
                }
              }
            }
          }
        },
        "summary": "create a new comment",
        "description": "create a new comment, the comment have one snapshot.",
        "security": [
          {
            "bearer": []
          }
        ],
        "x-nestia-namespace": "comments.create",
        "x-nestia-jsDocTags": [
          {
            "name": "summary",
            "text": [
              {
                "text": "create a new comment",
                "kind": "text"
              }
            ]
          },
          {
            "name": "tag",
            "text": [
              {
                "text": "comments",
                "kind": "text"
              }
            ]
          },
          {
            "name": "security",
            "text": [
              {
                "text": "bearer",
                "kind": "text"
              }
            ]
          },
          {
            "name": "param",
            "text": [
              {
                "text": "body",
                "kind": "parameterName"
              },
              {
                "text": " ",
                "kind": "space"
              },
              {
                "text": "comment content",
                "kind": "text"
              }
            ]
          },
          {
            "name": "return",
            "text": [
              {
                "text": "created comment",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "POST"
      }
    },
    "/comments/{comment_id}": {
      "put": {
        "tags": [
          "comments"
        ],
        "parameters": [
          {
            "name": "comment_id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-typia-typeTags": [
                {
                  "target": "string",
                  "name": "Format<\"uuid\">",
                  "kind": "format",
                  "value": "uuid",
                  "validate": "/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i.test($input)",
                  "exclusive": [
                    "format",
                    "pattern"
                  ]
                }
              ]
            },
            "description": "identity of comment",
            "required": true
          }
        ],
        "requestBody": {
          "description": "update content of comment",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IComment.IUpdate"
              }
            }
          },
          "required": true,
          "x-nestia-encrypted": false
        },
        "responses": {
          "201": {
            "description": "updated comment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IComment.Identity"
                }
              }
            },
            "x-nestia-encrypted": false
          },
          "401": {
            "description": "PERMISSION DENIED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "enum": [
                    "REQUIRED_PERMISSION",
                    "EXPIRED_PERMISSION",
                    "INVALID_PERMISSION"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "enum": [
                    "INSUFFICIENT_PERMISSION"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "enum": [
                    "NOT_FOUND_COMMENT"
                  ]
                }
              }
            }
          }
        },
        "summary": "update a comment",
        "description": "update a specific comment found by comment id\n\nonly the author can update the comment",
        "security": [
          {
            "bearer": []
          }
        ],
        "x-nestia-namespace": "comments.update",
        "x-nestia-jsDocTags": [
          {
            "name": "summary",
            "text": [
              {
                "text": "update a comment",
                "kind": "text"
              }
            ]
          },
          {
            "name": "tag",
            "text": [
              {
                "text": "comments",
                "kind": "text"
              }
            ]
          },
          {
            "name": "security",
            "text": [
              {
                "text": "bearer",
                "kind": "text"
              }
            ]
          },
          {
            "name": "param",
            "text": [
              {
                "text": "comment_id",
                "kind": "parameterName"
              },
              {
                "text": " ",
                "kind": "space"
              },
              {
                "text": "identity of comment",
                "kind": "text"
              }
            ]
          },
          {
            "name": "param",
            "text": [
              {
                "text": "body",
                "kind": "parameterName"
              },
              {
                "text": " ",
                "kind": "space"
              },
              {
                "text": "update content of comment",
                "kind": "text"
              }
            ]
          },
          {
            "name": "return",
            "text": [
              {
                "text": "updated comment",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "PUT"
      },
      "delete": {
        "tags": [
          "comments"
        ],
        "parameters": [
          {
            "name": "comment_id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid",
              "x-typia-typeTags": [
                {
                  "target": "string",
                  "name": "Format<\"uuid\">",
                  "kind": "format",
                  "value": "uuid",
                  "validate": "/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i.test($input)",
                  "exclusive": [
                    "format",
                    "pattern"
                  ]
                }
              ]
            },
            "description": "identity of comment",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "none",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IComment.Identity"
                }
              }
            },
            "x-nestia-encrypted": false
          },
          "401": {
            "description": "PERMISSION DENIED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "enum": [
                    "REQUIRED_PERMISSION",
                    "EXPIRED_PERMISSION",
                    "INVALID_PERMISSION"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "enum": [
                    "INSUFFICIENT_PERMISSION"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "enum": [
                    "NOT_FOUND_COMMENT"
                  ]
                }
              }
            }
          }
        },
        "summary": "delete a comment",
        "description": "delete a specific comment found by comment id\n\nonly the author can delete the comment",
        "security": [
          {
            "bearer": []
          }
        ],
        "x-nestia-namespace": "comments.remove",
        "x-nestia-jsDocTags": [
          {
            "name": "summary",
            "text": [
              {
                "text": "delete a comment",
                "kind": "text"
              }
            ]
          },
          {
            "name": "tag",
            "text": [
              {
                "text": "comments",
                "kind": "text"
              }
            ]
          },
          {
            "name": "security",
            "text": [
              {
                "text": "bearer",
                "kind": "text"
              }
            ]
          },
          {
            "name": "param",
            "text": [
              {
                "text": "comment_id",
                "kind": "parameterName"
              },
              {
                "text": " ",
                "kind": "space"
              },
              {
                "text": "identity of comment",
                "kind": "text"
              }
            ]
          },
          {
            "name": "return",
            "text": [
              {
                "text": "none",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "DELETE"
      }
    },
    "/health": {
      "get": {
        "tags": [
          "system"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "hello world",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "enum": [
                    "hello world"
                  ]
                }
              }
            },
            "x-nestia-encrypted": false
          }
        },
        "summary": "Health check API",
        "description": "Just for health checking API Server liveness.",
        "x-nestia-namespace": "health.check",
        "x-nestia-jsDocTags": [
          {
            "name": "summary",
            "text": [
              {
                "text": "Health check API",
                "kind": "text"
              }
            ]
          },
          {
            "name": "tag",
            "text": [
              {
                "text": "system",
                "kind": "text"
              }
            ]
          },
          {
            "name": "return",
            "text": [
              {
                "text": "hello world",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "GET"
      }
    }
  },
  "components": {
    "schemas": {
      "IArticle.ISearch": {
        "type": "object",
        "properties": {
          "posted_at": {
            "x-typia-jsDocTags": [
              {
                "name": "default",
                "text": [
                  {
                    "text": "desc",
                    "kind": "text"
                  }
                ]
              }
            ],
            "x-typia-required": true,
            "x-typia-optional": true,
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ],
            "default": "desc"
          },
          "skip": {
            "x-typia-jsDocTags": [
              {
                "name": "default",
                "text": [
                  {
                    "text": "0",
                    "kind": "text"
                  }
                ]
              }
            ],
            "x-typia-required": true,
            "x-typia-optional": true,
            "type": "integer",
            "x-typia-typeTags": [
              {
                "target": "number",
                "name": "Type<\"uint64\">",
                "kind": "type",
                "value": "uint64",
                "validate": "Math.floor($input) === $input && 0 <= $input && $input <= 18446744073709551615",
                "exclusive": true
              }
            ],
            "default": 0
          },
          "limit": {
            "x-typia-jsDocTags": [
              {
                "name": "default",
                "text": [
                  {
                    "text": "10",
                    "kind": "text"
                  }
                ]
              }
            ],
            "x-typia-required": true,
            "x-typia-optional": true,
            "type": "integer",
            "minimum": 10,
            "x-typia-typeTags": [
              {
                "target": "number",
                "name": "Type<\"uint64\">",
                "kind": "type",
                "value": "uint64",
                "validate": "Math.floor($input) === $input && 0 <= $input && $input <= 18446744073709551615",
                "exclusive": true
              },
              {
                "target": "number",
                "name": "Minimum<10>",
                "kind": "minimum",
                "value": 10,
                "validate": "10 <= $input",
                "exclusive": [
                  "minimum",
                  "exclusiveMinimum"
                ]
              }
            ],
            "default": 10
          }
        },
        "nullable": false,
        "x-typia-jsDocTags": []
      },
      "IArticle.IPaginatedResponse": {
        "type": "object",
        "properties": {
          "data": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IArticle.ISummary"
            }
          },
          "skip": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "integer",
            "x-typia-typeTags": [
              {
                "target": "number",
                "name": "Type<\"uint64\">",
                "kind": "type",
                "value": "uint64",
                "validate": "Math.floor($input) === $input && 0 <= $input && $input <= 18446744073709551615",
                "exclusive": true
              }
            ]
          },
          "limit": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "integer",
            "minimum": 10,
            "x-typia-typeTags": [
              {
                "target": "number",
                "name": "Type<\"uint64\">",
                "kind": "type",
                "value": "uint64",
                "validate": "Math.floor($input) === $input && 0 <= $input && $input <= 18446744073709551615",
                "exclusive": true
              },
              {
                "target": "number",
                "name": "Minimum<10>",
                "kind": "minimum",
                "value": 10,
                "validate": "10 <= $input",
                "exclusive": [
                  "minimum",
                  "exclusiveMinimum"
                ]
              }
            ]
          }
        },
        "nullable": false,
        "required": [
          "data",
          "skip",
          "limit"
        ],
        "x-typia-jsDocTags": []
      },
      "IArticle.ISummary": {
        "type": "object",
        "properties": {
          "updated_at": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string",
            "format": "date-time",
            "x-typia-typeTags": [
              {
                "target": "string",
                "name": "Format<\"date-time\">",
                "kind": "format",
                "value": "date-time",
                "validate": "!isNaN(new Date($input).getTime())",
                "exclusive": [
                  "format",
                  "pattern"
                ]
              }
            ],
            "nullable": true
          },
          "id": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string",
            "format": "uuid",
            "x-typia-typeTags": [
              {
                "target": "string",
                "name": "Format<\"uuid\">",
                "kind": "format",
                "value": "uuid",
                "validate": "/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i.test($input)",
                "exclusive": [
                  "format",
                  "pattern"
                ]
              }
            ]
          },
          "author": {
            "$ref": "#/components/schemas/IUser.IAuthor"
          },
          "posted_at": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string",
            "format": "date-time",
            "x-typia-typeTags": [
              {
                "target": "string",
                "name": "Format<\"date-time\">",
                "kind": "format",
                "value": "date-time",
                "validate": "!isNaN(new Date($input).getTime())",
                "exclusive": [
                  "format",
                  "pattern"
                ]
              }
            ]
          },
          "title": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          }
        },
        "nullable": false,
        "required": [
          "updated_at",
          "id",
          "author",
          "posted_at",
          "title"
        ],
        "x-typia-jsDocTags": []
      },
      "IUser.IAuthor": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/IUser.IDeletedAuthor"
          },
          {
            "$ref": "#/components/schemas/IUser.IActiveAuthor"
          }
        ]
      },
      "IUser.IDeletedAuthor": {
        "type": "object",
        "properties": {
          "status": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string",
            "enum": [
              "deleted"
            ]
          }
        },
        "nullable": false,
        "required": [
          "status"
        ],
        "x-typia-jsDocTags": []
      },
      "IUser.IActiveAuthor": {
        "type": "object",
        "properties": {
          "status": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string",
            "enum": [
              "active"
            ]
          },
          "id": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string",
            "format": "uuid",
            "x-typia-typeTags": [
              {
                "target": "string",
                "name": "Format<\"uuid\">",
                "kind": "format",
                "value": "uuid",
                "validate": "/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i.test($input)",
                "exclusive": [
                  "format",
                  "pattern"
                ]
              }
            ]
          },
          "name": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "image_url": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string",
            "format": "url",
            "x-typia-typeTags": [
              {
                "target": "string",
                "name": "Format<\"url\">",
                "kind": "format",
                "value": "url",
                "validate": "/^[a-zA-Z0-9]+:\\/\\/(?:www.)?[-a-zA-Z0-9@:%._+~#=]{1,256}.[a-zA-Z0-9()]{1,6}\\b(?:[-a-zA-Z0-9()@:%_+.~#?&/=]*)$/.test($input)",
                "exclusive": [
                  "format",
                  "pattern"
                ]
              }
            ],
            "nullable": true
          }
        },
        "nullable": false,
        "required": [
          "status",
          "id",
          "name",
          "image_url"
        ],
        "x-typia-jsDocTags": []
      },
      "IArticle.ICreate": {
        "type": "object",
        "properties": {
          "title": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "body_format": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string",
            "enum": [
              "html",
              "md",
              "txt"
            ]
          },
          "body_url": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string",
            "format": "url",
            "x-typia-typeTags": [
              {
                "target": "string",
                "name": "Format<\"url\">",
                "kind": "format",
                "value": "url",
                "validate": "/^[a-zA-Z0-9]+:\\/\\/(?:www.)?[-a-zA-Z0-9@:%._+~#=]{1,256}.[a-zA-Z0-9()]{1,6}\\b(?:[-a-zA-Z0-9()@:%_+.~#?&/=]*)$/.test($input)",
                "exclusive": [
                  "format",
                  "pattern"
                ]
              }
            ]
          }
        },
        "nullable": false,
        "required": [
          "title",
          "body_format",
          "body_url"
        ],
        "x-typia-jsDocTags": []
      },
      "IArticle.Identity": {
        "type": "object",
        "properties": {
          "article_id": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string",
            "format": "uuid",
            "x-typia-typeTags": [
              {
                "target": "string",
                "name": "Format<\"uuid\">",
                "kind": "format",
                "value": "uuid",
                "validate": "/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i.test($input)",
                "exclusive": [
                  "format",
                  "pattern"
                ]
              }
            ]
          }
        },
        "nullable": false,
        "required": [
          "article_id"
        ],
        "x-typia-jsDocTags": []
      },
      "IArticle": {
        "type": "object",
        "properties": {
          "id": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string",
            "format": "uuid",
            "x-typia-typeTags": [
              {
                "target": "string",
                "name": "Format<\"uuid\">",
                "kind": "format",
                "value": "uuid",
                "validate": "/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i.test($input)",
                "exclusive": [
                  "format",
                  "pattern"
                ]
              }
            ]
          },
          "author": {
            "$ref": "#/components/schemas/IUser.IAuthor"
          },
          "snapshots": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IArticle.ISnapshot"
            },
            "minItems": 1
          },
          "posted_at": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string",
            "format": "date-time",
            "x-typia-typeTags": [
              {
                "target": "string",
                "name": "Format<\"date-time\">",
                "kind": "format",
                "value": "date-time",
                "validate": "!isNaN(new Date($input).getTime())",
                "exclusive": [
                  "format",
                  "pattern"
                ]
              }
            ]
          }
        },
        "nullable": false,
        "required": [
          "id",
          "author",
          "snapshots",
          "posted_at"
        ],
        "x-typia-jsDocTags": []
      },
      "IArticle.ISnapshot": {
        "type": "object",
        "properties": {
          "title": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "body_url": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string",
            "format": "url",
            "x-typia-typeTags": [
              {
                "target": "string",
                "name": "Format<\"url\">",
                "kind": "format",
                "value": "url",
                "validate": "/^[a-zA-Z0-9]+:\\/\\/(?:www.)?[-a-zA-Z0-9@:%._+~#=]{1,256}.[a-zA-Z0-9()]{1,6}\\b(?:[-a-zA-Z0-9()@:%_+.~#?&/=]*)$/.test($input)",
                "exclusive": [
                  "format",
                  "pattern"
                ]
              }
            ]
          },
          "body_format": {
            "$ref": "#/components/schemas/ArticleBodyFormat"
          },
          "created_at": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string",
            "format": "date-time",
            "x-typia-typeTags": [
              {
                "target": "string",
                "name": "Format<\"date-time\">",
                "kind": "format",
                "value": "date-time",
                "validate": "!isNaN(new Date($input).getTime())",
                "exclusive": [
                  "format",
                  "pattern"
                ]
              }
            ]
          }
        },
        "nullable": false,
        "required": [
          "title",
          "body_url",
          "body_format",
          "created_at"
        ],
        "x-typia-jsDocTags": []
      },
      "ArticleBodyFormat": {
        "type": "string",
        "enum": [
          "html",
          "md",
          "txt"
        ]
      },
      "IAuthentication.IOauthUrls": {
        "type": "object",
        "properties": {
          "github": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string",
            "format": "url",
            "x-typia-typeTags": [
              {
                "target": "string",
                "name": "Format<\"url\">",
                "kind": "format",
                "value": "url",
                "validate": "/^[a-zA-Z0-9]+:\\/\\/(?:www.)?[-a-zA-Z0-9@:%._+~#=]{1,256}.[a-zA-Z0-9()]{1,6}\\b(?:[-a-zA-Z0-9()@:%_+.~#?&/=]*)$/.test($input)",
                "exclusive": [
                  "format",
                  "pattern"
                ]
              }
            ]
          },
          "kakao": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string",
            "format": "url",
            "x-typia-typeTags": [
              {
                "target": "string",
                "name": "Format<\"url\">",
                "kind": "format",
                "value": "url",
                "validate": "/^[a-zA-Z0-9]+:\\/\\/(?:www.)?[-a-zA-Z0-9@:%._+~#=]{1,256}.[a-zA-Z0-9()]{1,6}\\b(?:[-a-zA-Z0-9()@:%_+.~#?&/=]*)$/.test($input)",
                "exclusive": [
                  "format",
                  "pattern"
                ]
              }
            ]
          }
        },
        "nullable": false,
        "required": [
          "github",
          "kakao"
        ],
        "x-typia-jsDocTags": []
      },
      "IAuthentication.IOauthInput": {
        "type": "object",
        "properties": {
          "oauth_type": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string",
            "enum": [
              "github",
              "kakao"
            ]
          },
          "code": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          }
        },
        "nullable": false,
        "required": [
          "oauth_type",
          "code"
        ],
        "x-typia-jsDocTags": []
      },
      "IAuthentication": {
        "type": "object",
        "properties": {
          "status": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string",
            "enum": [
              "active"
            ]
          },
          "access_token": {
            "$ref": "#/components/schemas/IToken.IOutput"
          }
        },
        "nullable": false,
        "required": [
          "status",
          "access_token"
        ],
        "x-typia-jsDocTags": []
      },
      "IToken.IOutput": {
        "type": "object",
        "properties": {
          "token": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "expired_at": {
            "description": "토큰 만료일자",
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string",
            "format": "date-time",
            "x-typia-typeTags": [
              {
                "target": "string",
                "name": "Format<\"date-time\">",
                "kind": "format",
                "value": "date-time",
                "validate": "!isNaN(new Date($input).getTime())",
                "exclusive": [
                  "format",
                  "pattern"
                ]
              }
            ]
          }
        },
        "nullable": false,
        "required": [
          "token",
          "expired_at"
        ],
        "x-typia-jsDocTags": []
      },
      "IComment.ISearch": {
        "type": "object",
        "properties": {
          "skip": {
            "x-typia-jsDocTags": [
              {
                "name": "default",
                "text": [
                  {
                    "text": "0",
                    "kind": "text"
                  }
                ]
              }
            ],
            "x-typia-required": true,
            "x-typia-optional": true,
            "type": "integer",
            "x-typia-typeTags": [
              {
                "target": "number",
                "name": "Type<\"uint64\">",
                "kind": "type",
                "value": "uint64",
                "validate": "Math.floor($input) === $input && 0 <= $input && $input <= 18446744073709551615",
                "exclusive": true
              }
            ],
            "default": 0
          },
          "limit": {
            "x-typia-jsDocTags": [
              {
                "name": "default",
                "text": [
                  {
                    "text": "10",
                    "kind": "text"
                  }
                ]
              }
            ],
            "x-typia-required": true,
            "x-typia-optional": true,
            "type": "integer",
            "minimum": 10,
            "x-typia-typeTags": [
              {
                "target": "number",
                "name": "Type<\"uint64\">",
                "kind": "type",
                "value": "uint64",
                "validate": "Math.floor($input) === $input && 0 <= $input && $input <= 18446744073709551615",
                "exclusive": true
              },
              {
                "target": "number",
                "name": "Minimum<10>",
                "kind": "minimum",
                "value": 10,
                "validate": "10 <= $input",
                "exclusive": [
                  "minimum",
                  "exclusiveMinimum"
                ]
              }
            ],
            "default": 10
          },
          "article_id": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string",
            "format": "uuid",
            "x-typia-typeTags": [
              {
                "target": "string",
                "name": "Format<\"uuid\">",
                "kind": "format",
                "value": "uuid",
                "validate": "/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i.test($input)",
                "exclusive": [
                  "format",
                  "pattern"
                ]
              }
            ]
          }
        },
        "nullable": false,
        "required": [
          "article_id"
        ],
        "x-typia-jsDocTags": []
      },
      "IComment.IPaginatedResponse": {
        "type": "object",
        "properties": {
          "data": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IComment"
            }
          },
          "skip": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "integer",
            "x-typia-typeTags": [
              {
                "target": "number",
                "name": "Type<\"uint64\">",
                "kind": "type",
                "value": "uint64",
                "validate": "Math.floor($input) === $input && 0 <= $input && $input <= 18446744073709551615",
                "exclusive": true
              }
            ]
          },
          "limit": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "integer",
            "minimum": 10,
            "x-typia-typeTags": [
              {
                "target": "number",
                "name": "Type<\"uint64\">",
                "kind": "type",
                "value": "uint64",
                "validate": "Math.floor($input) === $input && 0 <= $input && $input <= 18446744073709551615",
                "exclusive": true
              },
              {
                "target": "number",
                "name": "Minimum<10>",
                "kind": "minimum",
                "value": 10,
                "validate": "10 <= $input",
                "exclusive": [
                  "minimum",
                  "exclusiveMinimum"
                ]
              }
            ]
          }
        },
        "nullable": false,
        "required": [
          "data",
          "skip",
          "limit"
        ],
        "x-typia-jsDocTags": []
      },
      "IComment": {
        "type": "object",
        "properties": {
          "id": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string",
            "format": "uuid",
            "x-typia-typeTags": [
              {
                "target": "string",
                "name": "Format<\"uuid\">",
                "kind": "format",
                "value": "uuid",
                "validate": "/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i.test($input)",
                "exclusive": [
                  "format",
                  "pattern"
                ]
              }
            ]
          },
          "author": {
            "$ref": "#/components/schemas/IUser.IAuthor"
          },
          "snapshots": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IComment.ISnapshot"
            },
            "minItems": 1
          },
          "created_at": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string",
            "format": "date-time",
            "x-typia-typeTags": [
              {
                "target": "string",
                "name": "Format<\"date-time\">",
                "kind": "format",
                "value": "date-time",
                "validate": "!isNaN(new Date($input).getTime())",
                "exclusive": [
                  "format",
                  "pattern"
                ]
              }
            ]
          }
        },
        "nullable": false,
        "required": [
          "id",
          "author",
          "snapshots",
          "created_at"
        ],
        "x-typia-jsDocTags": []
      },
      "IComment.ISnapshot": {
        "type": "object",
        "properties": {
          "body": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "created_at": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string",
            "format": "date-time",
            "x-typia-typeTags": [
              {
                "target": "string",
                "name": "Format<\"date-time\">",
                "kind": "format",
                "value": "date-time",
                "validate": "!isNaN(new Date($input).getTime())",
                "exclusive": [
                  "format",
                  "pattern"
                ]
              }
            ]
          }
        },
        "nullable": false,
        "required": [
          "body",
          "created_at"
        ],
        "x-typia-jsDocTags": []
      },
      "IComment.ICreate": {
        "type": "object",
        "properties": {
          "body": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "article_id": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string",
            "format": "uuid",
            "x-typia-typeTags": [
              {
                "target": "string",
                "name": "Format<\"uuid\">",
                "kind": "format",
                "value": "uuid",
                "validate": "/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i.test($input)",
                "exclusive": [
                  "format",
                  "pattern"
                ]
              }
            ]
          }
        },
        "nullable": false,
        "required": [
          "body",
          "article_id"
        ],
        "x-typia-jsDocTags": []
      },
      "IComment.Identity": {
        "type": "object",
        "properties": {
          "comment_id": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string",
            "format": "uuid",
            "x-typia-typeTags": [
              {
                "target": "string",
                "name": "Format<\"uuid\">",
                "kind": "format",
                "value": "uuid",
                "validate": "/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i.test($input)",
                "exclusive": [
                  "format",
                  "pattern"
                ]
              }
            ]
          }
        },
        "nullable": false,
        "required": [
          "comment_id"
        ],
        "x-typia-jsDocTags": []
      },
      "IComment.IUpdate": {
        "type": "object",
        "properties": {
          "body": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          }
        },
        "nullable": false,
        "required": [
          "body"
        ],
        "x-typia-jsDocTags": []
      }
    },
    "securitySchemes": {
      "bearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}